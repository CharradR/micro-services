{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// src/app/models/course.model.ts\nexport class CourseService {\n  // backCourseUrl = \"api/course\";\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // definir l'url du serveur BE \n    this.backCourseUrl = \"http://localhost:8091/api/course\";\n  }\n  //Response: course object with ID\n  addCourse(course) {\n    return this.httpClient.post(this.backCourseUrl, course);\n  }\n  getAllCourses() {\n    return this.httpClient.get(this.backCourseUrl);\n  }\n  getCourseById(id) {\n    return this.httpClient.get(`${this.backCourseUrl}/${id}`);\n  }\n  updateCourse(newCourse) {\n    return this.httpClient.post(`${this.backCourseUrl}/${newCourse.id}`, newCourse);\n  }\n  deleteCourse(id) {\n    return this.httpClient.delete(`${this.backCourseUrl}/${id}`);\n  }\n  searchCourse(course) {\n    return this.httpClient.post(this.backCourseUrl, course);\n  }\n  static {\n    this.ɵfac = function CourseService_Factory(t) {\n      return new (t || CourseService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CourseService,\n      factory: CourseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAaA;AAIA,OAAM,MAAOA,aAAa;EAMxB;EAEAC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAJ9B;IACA,kBAAa,GAAU,kCAAkC;EAGZ;EAE3C;EACAC,SAAS,CAACC,MAAU;IAClB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACC,aAAa,EAACF,MAAM,CAAC;EACxD;EAEFG,aAAa;IACX,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAC,IAAI,CAACF,aAAa,CAAC;EAAA;EAEhDG,aAAa,CAAEC,EAAW;IACxB,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,aAAa,IAAII,EAAE,EAAE,CAAC;EAC3D;EAGAC,YAAY,CAACC,SAAe;IAC1B,OAAO,IAAI,CAACV,UAAU,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,aAAa,IAAIM,SAAS,CAACF,EAAE,EAAE,EAAEE,SAAS,CAAC;EACjF;EAEAC,YAAY,CAACH,EAAO;IAClB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACR,aAAa,IAAII,EAAE,EAAE,CAAC;EAC9D;EAEAK,YAAY,CAACX,MAAW;IACtB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACC,aAAa,EAAEF,MAAM,CAAC;EACzD;;;uBAjCWJ,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAgB,SAAbhB,aAAa;MAAAiB,YANZ;IAAM;EAAA","names":["CourseService","constructor","httpClient","addCourse","course","post","backCourseUrl","getAllCourses","get","getCourseById","id","updateCourse","newCourse","deleteCourse","delete","searchCourse","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\donia\\Desktop\\educationProject\\src\\app\\services\\course.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nexport interface Course {\n  id: number;\n  title: string;\n  description: string;\n  teacherId?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n// src/app/models/course.model.ts\n\n\n\nexport class CourseService {\n  \n\n\n  // definir l'url du serveur BE \n  backCourseUrl: string =\"http://localhost:8091/api/course\";\n  // backCourseUrl = \"api/course\";\n\n  constructor(private httpClient: HttpClient) {}\n\n    //Response: course object with ID\n    addCourse(course:any){\n      return this.httpClient.post(this.backCourseUrl,course);\n    }\n  \n  getAllCourses(){\n    return this.httpClient.get(this.backCourseUrl)};\n\n  getCourseById( id : number){\n    return this.httpClient.get(`${this.backCourseUrl}/${id}`);\n  }\n\n\n  updateCourse(newCourse : any){\n    return this.httpClient.post(`${this.backCourseUrl}/${newCourse.id}`, newCourse)\n  }\n\n  deleteCourse(id: any){\n    return this.httpClient.delete(`${this.backCourseUrl}/${id}`);\n  }\n\n  searchCourse(course: any){\n    return this.httpClient.post(this.backCourseUrl, course);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}