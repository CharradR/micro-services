{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8081/api/books';\n  }\n  getBooks() {\n    return this.http.get(this.apiUrl);\n  }\n  // ðŸ“˜ RÃ©cupÃ©rer un livre par son ID\n  getBookById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Ajouter un livre\n  addBook(book) {\n    return this.http.post(this.apiUrl, book);\n  }\n  // Mettre Ã  jour un livre\n  updateBook(id, book) {\n    return this.http.put(`${this.apiUrl}/${id}`, book);\n  }\n  // Supprimer un livre\n  deleteBook(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.Éµfac = function BookService_Factory(t) {\n      return new (t || BookService)(i0.ÉµÉµinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: BookService,\n      factory: BookService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAeA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;EAEX;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC;EAC3C;EACC;EACDC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAO,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACpD;EAEA;EACAC,OAAO,CAACC,IAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAChD;EAEA;EACAE,UAAU,CAACJ,EAAU,EAAEE,IAAU;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIE,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC1D;EAEA;EACAI,UAAU,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACT,MAAM,IAAIE,EAAE,EAAE,CAAC;EACvD;;;uBA1BWP,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAe,SAAXf,WAAW;MAAAgB,YAHV;IAAM;EAAA","names":["BookService","constructor","http","getBooks","get","apiUrl","getBookById","id","addBook","book","post","updateBook","put","deleteBook","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\donia\\Desktop\\micro-services\\educationProject\\src\\app\\services\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs'\nexport interface Book {  \n  id?: string; \n  title: string;\n  author: string;\n  category: string;\n  available: boolean;\n  quantity: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BookService {\n  private apiUrl = 'http://localhost:8081/api/books';\n\n  constructor(private http: HttpClient) {}\n\n  getBooks(): Observable<Book[]> {\n    return this.http.get<Book[]>(this.apiUrl);\n  }\n   // ðŸ“˜ RÃ©cupÃ©rer un livre par son ID\n  getBookById(id: string): Observable<Book> {\n    return this.http.get<Book>(`${this.apiUrl}/${id}`);\n  }\n\n  // Ajouter un livre\n  addBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.apiUrl, book);\n  }\n\n  // Mettre Ã  jour un livre\n  updateBook(id: string, book: Book): Observable<Book> {\n    return this.http.put<Book>(`${this.apiUrl}/${id}`, book);\n  }\n\n  // Supprimer un livre\n  deleteBook(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}