# Application identification
spring.application.name=Gateway

# Config Client configuration
spring.cloud.config.enabled=true
spring.cloud.config.uri=http://config-server:8889
spring.config.import=optional:configserver:http://config-server:8889

# Local-only properties
server.port=8083

# Enable dynamic route discovery from Eureka
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Eureka registration (DO NOT use localhost in Docker)
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Keycloak configuration (INSIDE Docker ? use container name + internal port)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/LibraryKeyClock
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/LibraryKeyClock/protocol/openid-connect/certs

# Logging configuration for JWT debugging
logging.level.org.springframework.security=INFO
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.com.example.gateway=INFO
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.security.oauth2.server.resource=DEBUG
logging.level.org.springframework.security.oauth2.jwt=DEBUG

# Console logging pattern with emojis for better visibility
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
